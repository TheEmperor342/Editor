#########################################################################################
# SCHOOL COMPANION MADE WITH QT DESIGNER, PYSIDE2 AND PYTHON                            #
# "The best thing about a boolean is even if you are wrong, you are only off by a bit." #
#########################################################################################

######################################################
# THIS FILE IS JUST THE LOGIC                        #
# THE MAIN GUI IS IN THE FILE - SCHOOLCOMPANIONUI.PY #
# AND THE GUI OF EVERYSINGLE FILE IS IN THE NAME OF  #
# PLUS UI                                            #
######################################################

#################################################
# WRITTEN IN 3 IDEs - PYCHARM, VS CODE AND ATOM #
# MOST PART WAS WRITTEN IN VS CODE              #
#################################################

###########################################
# IMPORTING PYQT5 AND THE DEPENDECY FILES #
###########################################

# little note: I didn't write a SINGLE GUI used in this applet
# all the GUI is generated by Qt Designer LMAO
from PySide2 import QtWidgets,QtCore
from StdEdit import Ui_MainWindow2
from Modify import Ui_ModifyData
from GetDataToShowData import Ui_ShowData
from Admit_ import Ui_admitstd
from GUIs.SchoolCompanionUI import Ui_MainWindow
from EditAdmissionData import EditAdmitData
from UpdateSession import UpdateSessionClass
from multiprocessing import Process

#########################
# MAKING THE MAIN CLASS #
#########################

class _Ui_MainWindow_(QtWidgets.QWidget):
    def DoNothing():pass
    ######################
    # UPDATE THE SESSION #
    ######################
    def UpdateSession(self):
        self.window6 = QtWidgets.QMainWindow()
        self.SessionUI = UpdateSessionClass()
        self.SessionUI.setupUi(self.window6)
        self.window6.show()
    #################
    # ADMIT STUDENT #
    #################
    def AdmitStudent(self):
        self.window5 = QtWidgets.QMainWindow()
        self.showUI = Ui_admitstd()
        self.showUI.setupUi(self.window5)
        self.window5.show()
    #######################
    # EDIT ADMISSION DATA #
    #######################
    def ModifyAdmitData(self):
        self.window6 = QtWidgets.QMainWindow()
        self.ModifyAdmitUI = EditAdmitData()
        self.ModifyAdmitUI.setupUi(self.window6)
        self.window6.show()

    #############
    # SHOW DATA #
    #############
    def ShowData(self):
        self.window4 = QtWidgets.QMainWindow()
        self.showui = Ui_ShowData()
        self.showui.setupUi(self.window4)
        self.window4.show()

    #################################
    # MODIFYING THE STUDENT RECORDS #
    #################################
    def ModifyStdRec(self):
        self.window3 = QtWidgets.QMainWindow()
        self.ui2 = Ui_ModifyData()
        self.ui2.setupWindow(self.window3)
        self.window3.show()

    ##########################
    # CREATE STUDENT RECORDS #
    ##########################
    def editStdRec(self):
        self.window2 = QtWidgets.QMainWindow()
        self.ui = Ui_MainWindow2()
        self.ui.setup(self.window2)
        self.window2.show()


    def __init__(self):
        super().__init__()
        ########################################################
        # TO CONNECT ALL BUTTONS TO THERE RESPECTIVE FUNCTIONS #
        ########################################################
        self.ui = Ui_MainWindow()
        self.ui.setupUi(self)
        self.ui.Student_Rec_Edit.clicked.connect(self.editStdRec)
        self.ui.Modify.clicked.connect(self.ModifyStdRec)
        self.ui.GetData.clicked.connect(self.ShowData)
        self.ui.Admit_std.clicked.connect(self.AdmitStudent)
        self.ui.Amend.clicked.connect(self.ModifyAdmitData)
        self.ui.pushButton.clicked.connect(self.UpdateSession)
############################
# TO START THE APPLICATION #
############################
if __name__ == "__main__":
    # no sys required YES SIRRR!!! #

    app = QtWidgets.QApplication([])
    widget = _Ui_MainWindow_()
    widget.show()
    app.exec_()



input('Press ENTER to Exit')